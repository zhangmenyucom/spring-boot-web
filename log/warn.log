2017-10-23 16:16:29 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 16:16:29 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 16:19:50 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 16:19:50 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 16:20:37 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 16:20:37 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 16:21:25 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 16:21:26 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 16:22:45 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 16:22:45 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 16:24:22 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 16:24:23 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 16:24:37 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 16:24:37 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 16:28:00 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 16:28:00 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 16:29:10 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 16:29:11 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 16:31:38 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 16:31:38 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 16:55:13 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 16:55:13 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 17:31:25 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 17:31:25 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 17:32:20 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 17:32:20 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 17:37:45 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 17:37:45 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 17:38:23 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 17:38:23 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 17:39:20 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 17:39:20 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 17:42:49 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 17:42:49 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 17:44:27 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 17:44:27 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 17:45:31 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 17:45:31 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 17:46:44 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 17:46:44 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 17:49:52 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 17:49:52 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 17:52:39 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 17:52:39 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 17:54:34 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 17:54:34 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2017-10-23 17:55:37 [WARN ] - No MyBatis mapper was found in '[com.taylor]' package. Please check your configuration.
2017-10-23 17:55:37 [WARN ] - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
