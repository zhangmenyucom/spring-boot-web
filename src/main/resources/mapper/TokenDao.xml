<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.taylor.dao.TokenDao">

    <resultMap type="com.taylor.entity.TokenEntity" id="tokenMap">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="token" column="token"/>
        <result property="expireTime" column="expire_time"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <select id="queryObject" resultType="com.taylor.entity.TokenEntity">
		select
			`id`,
			`user_id`,
			`token`,
			`expire_time`,
			`create_time`,
			`update_time`
		from token
		where id = #{id}
	</select>

    <select id="queryList" resultType="com.taylor.entity.TokenEntity">
        select
        `id`,
        `user_id`,
        `token`,
        `expire_time`,
        `create_time`,
        `update_time`
        from token
        WHERE 1=1
        <if test="merchantId!=null">
            and merchant_id=#{merchantId}
        </if>
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from token
        WHERE 1=1
        <if test="merchantId!=null">
            and merchant_id=#{merchantId}
        </if>
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
    </select>

    <insert id="save" parameterType="com.taylor.entity.TokenEntity">
		insert into token(
			`id`,
			`user_id`,
			`token`,
			`expire_time`,
			`create_time`,
			`update_time`)
		values(
			#{id},
			#{userId},
			#{token},
			#{expireTime},
			#{createTime},
			#{updateTime})
	</insert>

    <update id="update" parameterType="com.taylor.entity.TokenEntity">
        update token
        <set>
            <if test="userId != null">`user_id` = #{userId},</if>
            <if test="token != null">`token` = #{token},</if>
            <if test="expireTime != null">`expire_time` = #{expireTime},</if>
            <if test="createTime != null">`create_time` = #{createTime},</if>
            <if test="updateTime != null">`update_time` = #{updateTime}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from token where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from token where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>